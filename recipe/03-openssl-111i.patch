From 039b8e9c3a9bf4470d401e44373c4572d9159a76 Mon Sep 17 00:00:00 2001
From: James McCoy <jamessan@debian.org>
Date: Sat, 14 May 2022 16:57:22 -0400
Subject: openssl-1.1.1i

No DEP3 Subject or Description header found

Gbp-Pq: openssl-1.1.1i.
---
 test/test_context.c | 14 +++++++-------
 test/test_serf.h    |  6 ++++++
 test/test_util.c    | 13 +++++++++++++
 3 files changed, 26 insertions(+), 7 deletions(-)

diff --git a/test/test_context.c b/test/test_context.c
index 74e53b4..8afe5b0 100644
--- a/test/test_context.c
+++ b/test/test_context.c
@@ -1138,7 +1138,7 @@ ssl_server_cert_cb_expect_failures(void *baton, int failures,
 
     /* We expect an error from the certificate validation function. */
     if (failures & expected_failures)
-        return APR_SUCCESS;
+        return APR_EGENERAL;
     else
         return SERF_ERROR_ISSUE_IN_TESTSUITE;
 }
@@ -1206,8 +1206,8 @@ static void test_ssl_handshake(CuTest *tc)
 
     create_new_request(tb, &handler_ctx[0], "GET", "/", 1);
 
-    test_helper_run_requests_expect_ok(tc, tb, num_requests, handler_ctx,
-                                       test_pool);
+    test_helper_run_requests_expect_fail(tc, tb, num_requests, handler_ctx,
+                                         test_pool);
 }
 
 /* Set up the ssl context with the CA and root CA certificates needed for
@@ -1774,8 +1774,8 @@ static void test_ssl_expired_server_cert(CuTest *tc)
 
     create_new_request(tb, &handler_ctx[0], "GET", "/", 1);
 
-    test_helper_run_requests_expect_ok(tc, tb, num_requests, handler_ctx,
-                                       test_pool);
+    test_helper_run_requests_expect_fail(tc, tb, num_requests, handler_ctx,
+                                         test_pool);
 }
 
 /* Validate that the expired certificate is reported as failure in the
@@ -1820,8 +1820,8 @@ static void test_ssl_future_server_cert(CuTest *tc)
 
     create_new_request(tb, &handler_ctx[0], "GET", "/", 1);
 
-    test_helper_run_requests_expect_ok(tc, tb, num_requests, handler_ctx,
-                                       test_pool);
+    test_helper_run_requests_expect_fail(tc, tb, num_requests, handler_ctx,
+                                         test_pool);
 }
 
 
diff --git a/test/test_serf.h b/test/test_serf.h
index e9fd2d4..e19e064 100644
--- a/test/test_serf.h
+++ b/test/test_serf.h
@@ -230,6 +230,12 @@ test_helper_run_requests_expect_ok(CuTest *tc, test_baton_t *tb,
                                    int num_requests,
                                    handler_baton_t handler_ctx[],
                                    apr_pool_t *pool);
+void
+test_helper_run_requests_expect_fail(CuTest *tc, test_baton_t *tb,
+                                     int num_requests,
+                                     handler_baton_t handler_ctx[],
+                                     apr_pool_t *pool);
+
 serf_bucket_t* accept_response(serf_request_t *request,
                                serf_bucket_t *stream,
                                void *acceptor_baton,
diff --git a/test/test_util.c b/test/test_util.c
index c607634..8cbf20c 100644
--- a/test/test_util.c
+++ b/test/test_util.c
@@ -461,6 +461,19 @@ test_helper_run_requests_expect_ok(CuTest *tc, test_baton_t *tb,
     CuAssertIntEquals(tc, num_requests, tb->handled_requests->nelts);
 }
 
+void
+test_helper_run_requests_expect_fail(CuTest *tc, test_baton_t *tb,
+                                     int num_requests,
+                                     handler_baton_t handler_ctx[],
+                                     apr_pool_t *pool)
+{
+    apr_status_t status;
+
+    status = test_helper_run_requests_no_check(tc, tb, num_requests,
+                                               handler_ctx, pool);
+    CuAssertIntEquals(tc, APR_EGENERAL, status);
+}
+
 serf_bucket_t* accept_response(serf_request_t *request,
                                serf_bucket_t *stream,
                                void *acceptor_baton,
-- 
cgit v1.1

